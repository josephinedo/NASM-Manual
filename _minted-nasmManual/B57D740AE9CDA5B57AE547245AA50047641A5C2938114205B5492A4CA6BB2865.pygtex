\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{; A macro with two parameters}
\PYG{c+c1}{; Implements the write system call}
\PYG{c+cp}{   \PYGZpc{}macro write\PYGZus{}string 2 }
      \PYG{n+nf}{mov}   \PYG{n+nb}{rax}\PYG{p}{,} \PYG{l+m+mi}{4}
      \PYG{n+nf}{mov}   \PYG{n+nb}{rbx}\PYG{p}{,} \PYG{l+m+mi}{1}
      \PYG{n+nf}{mov}   \PYG{n+nb}{rcx}\PYG{p}{,} \PYG{o}{\PYGZpc{}}\PYG{l+m+mi}{1}
      \PYG{n+nf}{mov}   \PYG{n+nb}{rdx}\PYG{p}{,} \PYG{o}{\PYGZpc{}}\PYG{l+m+mi}{2}
      \PYG{n+nf}{int}   \PYG{l+m+mh}{80h}
\PYG{c+cp}{   \PYGZpc{}endmacro}

   \PYG{k}{SECTION}  \PYG{n+nv}{.data}
\PYG{n+nf}{msg1} \PYG{n+nv}{db}  \PYG{l+s}{\PYGZsq{}Hello, programmers!\PYGZsq{}}\PYG{p}{,}\PYG{l+m+mh}{0xA}\PYG{p}{,}\PYG{l+m+mh}{0xD}    
\PYG{n+no}{len1}\PYG{k+kd}{ equ} \PYG{k+kc}{\PYGZdl{}} \PYG{o}{\PYGZhy{}} \PYG{n+nv}{msg1}       

\PYG{n+nf}{msg2} \PYG{n+nv}{db} \PYG{l+s}{\PYGZsq{}Welcome to the world of,\PYGZsq{}}\PYG{p}{,} \PYG{l+m+mh}{0xA}\PYG{p}{,}\PYG{l+m+mh}{0xD} 
\PYG{n+no}{len2}\PYG{k+kd}{ equ} \PYG{k+kc}{\PYGZdl{}}\PYG{o}{\PYGZhy{}} \PYG{n+nv}{msg2} 

\PYG{n+nf}{msg3} \PYG{n+nv}{db} \PYG{l+s}{\PYGZsq{}Linux assembly programming! \PYGZsq{}}
\PYG{n+no}{len3}\PYG{k+kd}{ equ} \PYG{k+kc}{\PYGZdl{}}\PYG{o}{\PYGZhy{}} \PYG{n+nv}{msg3}
 
   \PYG{k}{SECTION}	\PYG{n+nv}{.text}
   \PYG{k}{global} \PYG{n+nv}{\PYGZus{}start}            \PYG{c+c1}{;must be declared for using gcc}
	
\PYG{n+nl}{\PYGZus{}start:}                     \PYG{c+c1}{;tell linker entry point}
   \PYG{n+nf}{write\PYGZus{}string} \PYG{n+nv}{msg1}\PYG{p}{,} \PYG{n+nv}{len1}               
   \PYG{n+nf}{write\PYGZus{}string} \PYG{n+nv}{msg2}\PYG{p}{,} \PYG{n+nv}{len2}    
   \PYG{n+nf}{write\PYGZus{}string} \PYG{n+nv}{msg3}\PYG{p}{,} \PYG{n+nv}{len3}  
	
   \PYG{n+nf}{mov} \PYG{n+nb}{rax}\PYG{p}{,}\PYG{l+m+mi}{1}                \PYG{c+c1}{;system call number (sys\PYGZus{}exit)}
   \PYG{n+nf}{int} \PYG{l+m+mh}{0x80}                 \PYG{c+c1}{;call kernel}
\end{Verbatim}
